library("dplyr")
install.packages("dplyr")
install.packages("httr")
install.packages("jsonlite")
library("dplyr")
library("httr")
library("jsonlite")
base_uri <- "https://api.github.com"
base_uri <- "https://api.github.com"
# Under the "Repositories" category of the API documentation, find the endpoint
# that will list _repos in an organization_. Then create a variable named
# `org_resource` that stores the endpoint for the `programming-for-data-science`
# organization repos (this is the _path_ to the resource of interest).
org_resource <- "/orgs/programming-for-data-science/repos"
# Send a GET request to this endpoint (the `base_uri` followed by the
# `org_resource` path). Print the response to show that your request worked.
# (The listed URI will also allow you to inspect the JSON in the browser easily).
response <- GET(paste(base_uri, org_resource))
print(response)
response <- GET(paste(base_uri, org_resource))
response <- GET(paste(base_uri, org_resource, sep=""))
print(response)
body <- content(response, "text")
body
print(response)
body <- content(response, type="text")
body <- content(response, "text")
data <- fromJSON(body)
View(data)
data_public <- filter(private == FALSE)
data_public <- filter(data, private == FALSE)
print(length(data_public$id))
query_params <- list(q = "dplyr")
search_endpoint <- "/search/repositories?"
search <- GET(paste(base_uri, search_endpoint, sep=""), query = query_params)
print(search)
body <- content(search, "text")
data2 <- fromJSON(body)
View(data2)
body
data3 <- data2$items
View(data3)
print(length(data3$id))
data3 <- mutate(data3, c(1:30))
data3 <- mutate(data3, c(1:30))
data3 <- mutate(data3, number = c(1:30))
data3 <- mutate(data3, number = c(1:30)) %>%
select(number < 6)
select(data3, number < 6)
print(data3)
print(data3$full_name)
select(data3, number < 6)
data3 <- mutate(data3, number = c(1:30))
select(data3, c(1:30) < 6)
search <- GET(paste(base_uri, search_endpoint, sep=""), query = query_params)
print(search)
# Extract the content of the response and convert it from a JSON string into a
# data frame.
body <- content(search, "text")
data2 <- fromJSON(body)
View(data2)
data3 <- data2$items
View(data3)
# How many search repos did your search find? (Hint: check the list names to
# find an appropriate value).
print(length(data3$id))
# What are the full names of the top 5 repos in the search results?
data3 <- mutate(data3, number = c(1:30))
select(data3, number < 6)
print(data3$full_name)
select(data3, number == 1)
filter(data3, number == 1)
filter(data3, number == 1)
print(data3$full_name)
data3 <- mutate(data3, number = c(1:30)) %>%
filter(number == 1)
print(data3$full_name)
data3 <- mutate(data3, number = c(1:30)) %>%
filter(number < 6)
print(data3$full_name)
# `query`. Print the response to show that your request worked.
search <- GET(paste(base_uri, search_endpoint, sep=""), query = query_params)
print(search)
# Extract the content of the response and convert it from a JSON string into a
# data frame.
body <- content(search, "text")
data2 <- fromJSON(body)
View(data2)
data3 <- data2$items
View(data3)
# How many search repos did your search find? (Hint: check the list names to
# find an appropriate value).
print(length(data3$id))
# What are the full names of the top 5 repos in the search results?
data3 <- mutate(data3, number = c(1:30)) %>%
filter(number < 6)
print(data3$full_name)
