View(flights)
library("nycflights13")
library("dplyr")
View(flights)
??group
?group
View(airports)
View(flights)
?distinct
destinations <- distinct(flights, dest)
airlines <- distinct(flights, carrier)
delays <- flights$arr_delay[flights$dest == destinations]
?dplyr
?select
relevant <- select(flights, arr_delay, dest)
destinations <- distinct(relevant, dest)
destinations <- filter(relevant, distinct(relevant, dest))
?group
destinations <- group_by(relevant)
destinations <- group_by(relevant, dest)
summarize(destinations, mean_delay = mean(arr_delay))
summarize(carriers, mean_delay = mean(carrier))
relevant <- select(flights, arr_delay, carrier)
carriers <- group_by(relevant, carrier)
summarize(carriers, mean_delay = mean(carrier))
destinations <- group_by(flights, dest)
summarize(destinations, mean_delay = mean(arr_delay)) #sort of works, some NA
carriers <- group_by(flights, carrier)
summarize(carriers, mean_delay = mean(carrier))
delays <- summarize(destinations, mean_delay = mean(arr_delay)) #sort of works, some NA
max(delays)
destinations <- group_by(flights, dest)
filter(destinations, arr_delay > 0) %>%
delays <- summarize(mean_delay = mean(arr_delay)) #sort of works, some NA
destinations <- group_by(flights, dest)
destinations <- filter(destinations, arr_delay > 0)
delays <- summarize(destinations, mean_delay = mean(arr_delay)) #sort of works, some NA
destinations <- group_by(flights, dest)
destinations <- filter(destinations, arr_delay > 0)
delays <- summarize(destinations, mean_delay = mean(arr_delay)) %>% #sort of works, some NA
filter(arr_delay == max(arr_delay))
print(select(dest))
destinations <- group_by(flights, dest)
destinations <- filter(destinations, arr_delay > 0)
delays <- summarize(destinations, mean_delay = mean(arr_delay)) #sort of works, some NA
delays <- filter(delays, arr_delay == max(arr_delay))
print(select(delays, dest))
flights %>%
group_by(month) %>%
filter(!is.na(dep_delay))
summarize(avg_delay = mean(dep_delay))
flights %>%
group_by(month) %>%
filter(!is.na(dep_delay)) %>%
summarize(avg_delay = mean(dep_delay))
dep_delay_by_month <- flights %>%
group_by(month) %>%
filter(!is.na(dep_delay)) %>%
summarize(avg_delay = mean(dep_delay))
# Which month had the greatest average departure delay?
max(dep_delay_by_month)
plot(delayMonth)
plot(dep_delay_by_month)
arr_delay_by_dest <- flights %>%
group_by(dest) %>%
filter(!is.na(arr_delay)) %>%
summarize(avg_delay = mean(arr_delay))
View(arr_delay_by_dest)
View(flights)
speed_by_dest <- flights %>%
group_by(dest) %>%
filter(!is.na(distance / air_time)) %>%
summarize(avg_speed = mean(distance / air_time))
View(speed_by_dest)
install.packages("tidyr")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("ggplot2")
library("dplyr")
library("tidyr")
library("ggplot2")
setwd("C:/Users/Cameron/Desktop/School/book-exercises/chapter-12-exercises/exercise-1")
avocados <- load("data/avocado.csv")
avocados <- read.csv("data/avocado.csv", stringsAsFactors = FALSE)
avocados <- mutate(avocados, Date = as.Date(Date))
rm(list = ls())
avocados <- read.csv("data/avocado.csv", stringsAsFactors = FALSE)
# To tell R to treat the `Date` column as a date (not just a string)
# Redefine that column as a date using the `as.Date()` function
# (hint: use the `mutate` function)
avocados <- mutate(avocados, Date = as.Date(Date))
avocados <- read.csv("data/avocado.csv", stringsAsFactors = FALSE)
# (hint: use the `mutate` function)
avocados <- mutate(avocados, Date = as.Date(Date))
View(avocados)
avocados <- mutate(avocados, small_haas = x4046)
avocados <- mutate(avocados, large_haas = x4225)
avocados <- mutate(avocados, xlarge_haas = x4770)
avocados <- mutate(avocados, small_haas = X4046)
avocados <- mutate(avocados, large_haas = X4225)
avocados <- mutate(avocados, xlarge_haas = X4770)
select(avocados, -c(X4046, X4225, X4770))
avocados <- select(avocados, -c(X4046, X4225, X4770))
avocados <- mutate(avocados, other_avos = Total.volume - small_haas - large_hass - xlarge_haas)
avocados <- mutate(avocados, other_avos = Total.Volume - small_haas - large_hass - xlarge_haas)
avocados <- mutate(avocados, other_avos = Total.Volume - small_haas - large_haas - xlarge_haas)
by_size <- avocados %>%
select(Date, other_avos, small_haas, large_haas, xlarge_haas)
size_gathered <- gather(by_size, key = size, value = volume)
View(size_gathered)
by_type <- group_by(avocados, Date, type) %>%
summarise(sum = sum(Total.Volume))
print(by_type)
by_type_wide(by_type)
by_type_wide <- spread(by_type)
by_type_wide <- spread(by_type, key = type, value = sales)
by_type_wide <- spread(by_type, key = type, value = Total.Volume)
by_type_wide <- spread(by_type, key = type, value = sum)
View(size_gathered)
View(by_type_wide)
ggplot(by_type_wide) +
geom_point(mapping = aes(x = conventional, y = organic, color = Date))
